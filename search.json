[{"path":[]},{"path":"https://shikokuchuo.net/sakura/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://shikokuchuo.net/sakura/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://shikokuchuo.net/sakura/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://shikokuchuo.net/sakura/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://shikokuchuo.net/sakura/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement code@hibiki-ai.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://shikokuchuo.net/sakura/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://shikokuchuo.net/sakura/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://shikokuchuo.net/sakura/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://shikokuchuo.net/sakura/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://shikokuchuo.net/sakura/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://shikokuchuo.net/sakura/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://shikokuchuo.net/sakura/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 sakura authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://shikokuchuo.net/sakura/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Charlie Gao. Author, maintainer. Hibiki AI Limited. Copyright holder.","code":""},{"path":"https://shikokuchuo.net/sakura/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gao C (2025). sakura: Extension R Serialization. R package version 0.1.0.9000, https://github.com/shikokuchuo/sakura/, https://shikokuchuo.net/sakura/.","code":"@Manual{,   title = {sakura: Extension to R Serialization},   author = {Charlie Gao},   year = {2025},   note = {R package version 0.1.0.9000, https://github.com/shikokuchuo/sakura/},   url = {https://shikokuchuo.net/sakura/}, }"},{"path":"https://shikokuchuo.net/sakura/index.html","id":"sakura","dir":"","previous_headings":"","what":"Extension to R Serialization","title":"Extension to R Serialization","text":"","code":"________    /\\ sa    \\ /  \\  ku   \\ \\  /    ra /  \\/_______/"},{"path":"https://shikokuchuo.net/sakura/index.html","id":"extension-to-r-serialization","dir":"","previous_headings":"","what":"Extension to R Serialization","title":"Extension to R Serialization","text":"Extends functionality R serialization augmenting built-reference hook system. enhanced implementation allows integrated single-pass operation combines R serialization third-party serialization methods. Facilitates serialization even complex R objects, contain non-system reference objects, accessed via external pointers, enable use parallel distributed computing. package request meeting R Consortium Marshalling Serialization Working Group held useR!2024 Salzburg, Austria. designed eventually provide common framework marshalling R. extracts functionality embedded within mirai async framework use contexts.","code":""},{"path":"https://shikokuchuo.net/sakura/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extension to R Serialization","text":"Install current release CRAN: development version using:","code":"install.packages(\"sakura\") pak::pak(\"shikokuchuo/sakura\")"},{"path":"https://shikokuchuo.net/sakura/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Extension to R Serialization","text":"R objects nature serialized, accessed via external pointer. Using arrow package example: cases, sakura::serial_config() can used create custom serialization configurations, specifying functions hook R’s native serialization mechanism reference objects (‘refhooks’). configuration can supplied ‘hook’ argument sakura::serialize() sakura::unserialize(). time, arrow tables handled seamlessly. types serialization function vectorized case, configuration created specifying vec = TRUE. Using torch example: Base R serialization fails, sakura serialization succeeds:","code":"library(arrow, warn.conflicts = FALSE) obj <- list(as_arrow_table(iris), as_arrow_table(mtcars))  unserialize(serialize(obj, NULL)) #> [[1]] #> Table #> Error: Invalid <Table>, external pointer to null cfg <- sakura::serial_config(   \"ArrowTabular\",   arrow::write_to_raw,   function(x) arrow::read_ipc_stream(x, as_data_frame = FALSE) ) sakura::unserialize(sakura::serialize(obj, cfg), cfg) #> [[1]] #> Table #> 150 rows x 5 columns #> $Sepal.Length <double> #> $Sepal.Width <double> #> $Petal.Length <double> #> $Petal.Width <double> #> $Species <dictionary<values=string, indices=int8>> #>  #> See $metadata for additional Schema metadata #>  #> [[2]] #> Table #> 32 rows x 11 columns #> $mpg <double> #> $cyl <double> #> $disp <double> #> $hp <double> #> $drat <double> #> $wt <double> #> $qsec <double> #> $vs <double> #> $am <double> #> $gear <double> #> $carb <double> #>  #> See $metadata for additional Schema metadata library(torch) x <- list(torch_rand(5L), runif(5L))  unserialize(serialize(x, NULL)) #> [[1]] #> torch_tensor #> Error in (function (self) : external pointer is not valid cfg <- sakura::serial_config(\"torch_tensor\", torch::torch_serialize, torch::torch_load, vec = TRUE)  sakura::unserialize(sakura::serialize(x, cfg), cfg) #> [[1]] #> torch_tensor #>  0.8650 #>  0.9405 #>  0.8917 #>  0.1164 #>  0.6513 #> [ CPUFloatType{5} ] #>  #> [[2]] #> [1] 0.3048439 0.5453249 0.8527941 0.5749037 0.7142786"},{"path":"https://shikokuchuo.net/sakura/index.html","id":"c-interface","dir":"","previous_headings":"","what":"C Interface","title":"Extension to R Serialization","text":"C level interface provided. public header file sakura.h available inst/include packages declare sakura LinkingTo. may used following way:","code":"#include <sakura.h>  sakura_sfunc sakura_serialize; sakura_ufunc sakura_unserialize;  // runtime initialization: sakura_serialize = (sakura_sfunc) R_GetCCallable(\"sakura\", \"sakura_serialize\"); sakura_unserialize = (sakura_ufunc) R_GetCCallable(\"sakura\", \"sakura_unserialize\");"},{"path":"https://shikokuchuo.net/sakura/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Extension to R Serialization","text":"like thank particular: R Core providing interface R serialization mechanism. Luke Tierney Mike Cheng meticulous efforts documenting serialization interface. Daniel Falbel discussion around efficient solution serialization transmission torch tensors. – Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://shikokuchuo.net/sakura/reference/sakura-package.html","id":null,"dir":"Reference","previous_headings":"","what":"sakura: Extension to R Serialization — sakura-package","title":"sakura: Extension to R Serialization — sakura-package","text":"Extends functionality R serialization augmenting built-reference hook system. enhanced implementation allows integrated single-pass operation combines R serialization third-party serialization methods. Facilitates serialization even complex R objects, contain non-system reference objects, accessed via external pointers, enable use parallel distributed computing.","code":""},{"path":[]},{"path":"https://shikokuchuo.net/sakura/reference/sakura-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"sakura: Extension to R Serialization — sakura-package","text":"Charlie Gao charlie.gao@shikokuchuo.net   (ORCID)","code":""},{"path":"https://shikokuchuo.net/sakura/reference/serial_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Serialization Configuration — serial_config","title":"Create Serialization Configuration — serial_config","text":"Returns serialization configuration custom serialization unserialization non-system reference objects, using 'refhook' system R native serialization. allows use across different R sessions.","code":""},{"path":"https://shikokuchuo.net/sakura/reference/serial_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Serialization Configuration — serial_config","text":"","code":"serial_config(class, sfunc, ufunc, vec = FALSE)"},{"path":"https://shikokuchuo.net/sakura/reference/serial_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Serialization Configuration — serial_config","text":"class character string class object custom serialization functions applied , e.g. ‘ArrowTabular’ ‘torch_tensor’. sfunc function accepts reference object inheriting ‘class’ (list objects) returns raw vector. ufunc function accepts raw vector returns reference object (list objects). vec [default FALSE] whether serialization functions vectorized. FALSE, accept return reference objects individually e.g. arrow::write_to_raw arrow::read_ipc_stream. TRUE, accept return list reference objects, e.g. torch::torch_serialize torch::torch_load.","code":""},{"path":"https://shikokuchuo.net/sakura/reference/serial_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Serialization Configuration — serial_config","text":"pairlist comprising configuration. may provided   'hook' argument serialize unserialize.","code":""},{"path":"https://shikokuchuo.net/sakura/reference/serial_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Serialization Configuration — serial_config","text":"","code":"serial_config(\"test_class\", base::serialize, base::unserialize) #> [[1]] #> [1] \"test_class\" #>  #> [[2]] #> function (object, connection, ascii = FALSE, xdr = TRUE, version = NULL,  #>     refhook = NULL)  #> { #>     if (!is.null(connection)) { #>         if (!inherits(connection, \"connection\"))  #>             stop(\"'connection' must be a connection\") #>         if (missing(ascii))  #>             ascii <- summary(connection)$text == \"text\" #>     } #>     if (!ascii && inherits(connection, \"sockconn\"))  #>         .Internal(serializeb(object, connection, xdr, version,  #>             refhook)) #>     else { #>         type <- if (is.na(ascii))  #>             2L #>         else if (ascii)  #>             1L #>         else if (!xdr)  #>             3L #>         else 0L #>         .Internal(serialize(object, connection, type, version,  #>             refhook)) #>     } #> } #> <bytecode: 0x557152a07ea0> #> <environment: namespace:base> #>  #> [[3]] #> function (connection, refhook = NULL)  #> { #>     if (typeof(connection) != \"raw\" && !is.character(connection) &&  #>         !inherits(connection, \"connection\"))  #>         stop(\"'connection' must be a connection\") #>     .Internal(unserialize(connection, refhook)) #> } #> <bytecode: 0x5571508dfe70> #> <environment: namespace:base> #>  #> [[4]] #> [1] FALSE #>"},{"path":"https://shikokuchuo.net/sakura/reference/serialize.html","id":null,"dir":"Reference","previous_headings":"","what":"Serialize — serialize","title":"Serialize — serialize","text":"extension R native serialization using 'refhook' system custom serialization unserialization non-system reference objects.","code":""},{"path":"https://shikokuchuo.net/sakura/reference/serialize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Serialize — serialize","text":"","code":"serialize(x, hook = NULL)  unserialize(x, hook = NULL)"},{"path":"https://shikokuchuo.net/sakura/reference/serialize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Serialize — serialize","text":"x object. hook [default NULL] optionally, configuration returned serial_config.","code":""},{"path":"https://shikokuchuo.net/sakura/reference/serialize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Serialize — serialize","text":"serialize: raw vector. unserialize: unserialized object.","code":""},{"path":"https://shikokuchuo.net/sakura/reference/serialize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Serialize — serialize","text":"","code":"vec <- serialize(data.frame()) vec #>   [1] 58 0a 00 00 00 03 00 04 04 03 00 03 05 00 00 00 00 05 55 54 46 2d 38 00 00 #>  [26] 03 13 00 00 00 00 00 00 04 02 00 00 00 01 00 04 00 09 00 00 00 05 6e 61 6d #>  [51] 65 73 00 00 00 10 00 00 00 00 00 00 04 02 00 00 00 01 00 04 00 09 00 00 00 #>  [76] 09 72 6f 77 2e 6e 61 6d 65 73 00 00 00 0d 00 00 00 00 00 00 04 02 00 00 00 #> [101] 01 00 04 00 09 00 00 00 05 63 6c 61 73 73 00 00 00 10 00 00 00 01 00 04 00 #> [126] 09 00 00 00 0a 64 61 74 61 2e 66 72 61 6d 65 00 00 00 fe unserialize(vec) #> data frame with 0 columns and 0 rows  obj <- list(arrow::as_arrow_table(iris), arrow::as_arrow_table(mtcars)) cfg <- serial_config(   \"ArrowTabular\",   arrow::write_to_raw,   function(x) arrow::read_ipc_stream(x, as_data_frame = FALSE) ) raw <- serialize(obj, cfg) unserialize(raw, cfg) #> [[1]] #> Table #> 150 rows x 5 columns #> $Sepal.Length <double> #> $Sepal.Width <double> #> $Petal.Length <double> #> $Petal.Width <double> #> $Species <dictionary<values=string, indices=int8>> #>  #> See $metadata for additional Schema metadata #>  #> [[2]] #> Table #> 32 rows x 11 columns #> $mpg <double> #> $cyl <double> #> $disp <double> #> $hp <double> #> $drat <double> #> $wt <double> #> $qsec <double> #> $vs <double> #> $am <double> #> $gear <double> #> $carb <double> #>  #> See $metadata for additional Schema metadata #>"},{"path":"https://shikokuchuo.net/sakura/news/index.html","id":"sakura-development-version","dir":"Changelog","previous_headings":"","what":"sakura (development version)","title":"sakura (development version)","text":"Implements C level interface public declarations sakura.h. Package re-licensed MIT licence.","code":""},{"path":"https://shikokuchuo.net/sakura/news/index.html","id":"sakura-010","dir":"Changelog","previous_headings":"","what":"sakura 0.1.0","title":"sakura 0.1.0","text":"CRAN release: 2025-03-03 Initial CRAN release.","code":""},{"path":"https://shikokuchuo.net/sakura/news/index.html","id":"sakura-001","dir":"Changelog","previous_headings":"","what":"sakura 0.0.1","title":"sakura 0.0.1","text":"Initial release Github R-universe.","code":""}]
